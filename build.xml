<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE project>
<project  basedir="." default="build">
	
	<basename property="ant.project.name" file="${basedir}"/>
	<property environment="env"/>
	
	<echo message="ANT version ${ant.version}" />
	<echo message="project ${ant.project.name}: ${ant.file}"/> 
	
	<!-- Compiler options -->
	<property name="debuglevel" value="source,lines,vars"/>
	<property name="target" value="1.6"/>
	<property name="source" value="1.6"/>
	
	<!-- Source dirs -->
	<path id="path.src">
		<pathelement location="src"/>
		<pathelement location=".apt_generated"/>
		<pathelement location="test"/>
	</path>
	<pathconvert pathsep="," property="path.src.csv" refid="path.src"/>

	<!-- Library dirs -->
	<available file="/opt/IBM/RAD96/" type="dir" property="RAD_DIR" value="/opt/IBM/RAD96/"/>

	<property name="target.classes" value="WebContent/WEB-INF/classes"/>
	<path id="path.webApp">
		<fileset dir="WebContent/WEB-INF/lib">
			<include name="*.jar" />
		</fileset>
	</path>
	<path id="path.ear"/>
	<path id="path.webSpherePortal">
		<fileset dir="${RAD_DIR}/runtimes/base_v8_stub">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${RAD_DIR}/runtimes/portal_v80_stub">
			<include name="**/*.jar" />
		</fileset>
	</path>
	<path id="classpath">
		<pathelement location="${target.classes}"/>
		<path refid="path.webApp"/>
		<path refid="path.ear"/>
		<path refid="path.webSpherePortal"/>
	</path>
	
	<!-- Targets -->
	<target depends="init" name="init_TEST">
		<mkdir dir="${target.classes}"/>
		<!-- include anche i sorgenti nella compilazione -->
		<copy includeemptydirs="false" todir="${target.classes}" overwrite="true">
			<multirootfileset basedirs="resources.TEST" />
		</copy>
	</target>
	<target depends="init" name="init_PROD">
		<mkdir dir="${target.classes}"/>
		<!-- include anche i sorgenti nella compilazione -->
		<copy includeemptydirs="false" todir="${target.classes}" overwrite="true">
			<multirootfileset basedirs="resources.PROD" />
		</copy>
	</target>
	<target name="init">
		<mkdir dir="${target.classes}"/>
		<!-- include anche i sorgenti nella compilazione -->
		<copy includeemptydirs="false" todir="${target.classes}" overwrite="false">
			<multirootfileset basedirs="${path.src.csv}" />
		</copy>
	</target>
	
	<target depends="init" name="build-project">
		<javac debug="true" debuglevel="${debuglevel}" destdir="${target.classes}" includeantruntime="false" source="${source}" target="${target}">
			<src refid="path.src"/>
			<classpath refid="classpath"/>
		</javac>
	</target>
	
	<target name="clean">
		<delete dir="${target.classes}"/>
	</target>

	<target depends="build-project" name="build"/>
	<target depends="init_TEST,build-project" name="build_TEST"/>
	<target depends="init_PROD,build-project" name="build_PROD"/>

</project>